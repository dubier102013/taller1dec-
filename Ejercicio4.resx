<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>